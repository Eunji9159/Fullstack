# 핸들러 인터셉터

인터셉터는 주로 컨트롤러 이벤트 호출전에 가로채서 어떠한 처리를 해주기 위해 사용되는 기능
세션체크가 필요한 페이지는 XML 설정에 의해 정의해줌으로써 
각 jsp 페이지마다 로그인 체크(세션 체크) 해주는 코드를 모두 작성해줄 필요가 없습니다.

<mvc:interceptors>
   <mvc:interceptor>
       <mvc:mapping path="/main.do" />
       <mvc:mapping path="/memberUpdateForm.do"/>
       <ref bean="loginCheckInterceptor"/>
   </mvc:interceptor>
</mvc:interceptors>

//첫 번째 라인은 인터셉터 클래스의 빈(Bean)을 등록하는 과정이다.
<bean id="interceptorForExam" class="com.exam.ExamInterceptor"></bean>
//두 번째 라인은 인터셉터 선언부
<mvc:interceptors>
//세 번째 라인은 인터셉터 설정을 나타내는 부분으로써 여기에서 적용할 Url, 
적용할 인터셉터 빈, 예외처리 등을 구성한다.
	<mvc:interceptor>
//네 번째 라인은 인터셉터를 적용할 Url을 설정한다.
//컨트롤러에서 @RequestMapping으로 설정한 URL을 이곳에 작성할 경우
//해당 인터셉터를 타게 된다는 뜻이다.
		<mvc:mapping path="/*" />
//다섯 번째 라인은 예외를 둔다는 것이다. 
		<mvc:exclude-mapping path="/login/**" />
		<mvc:exclude-mapping path="/add/**" />
//일곱 번째 라인은 해당 인터셉터를 처리할 빈을 적용하는 부분
		<ref bean="interceptorForExam" />
	</mvc:interceptor>
</mvc:interceptors>

=========================================================
<interceptors>
	<interceptor>
		<!-- 인터셉터가 적용될 URL -->
		<mapping path="/**" />
		<!-- 인터셉터가 제외될 URL -->
		<exclude-mapping path="/main/*" />
		<!-- 적용될 인터셉터를 지정 -->
		<beans:bean id="twoInter" 
		class="com.my.web.interceptor.Interceptor" />
	</interceptor>
</interceptors>

// exclude-maping 은 Spring 3.2 부터 지원
// exclude-maping 이 먼저 평가되고, 그 후에 mapping 이 평가됨


# 인터셉터 제외 코드

static final String[] EXCLUDE_URL_LIST = {
	"/login", "/join", "/home"
};

/** 로그인 체크 제외 리스트 */
for (String target : EXCLUDE_URL_LIST) {
	if (reqUrl.indexOf(target) > -1) {
		return true;
	}
}

