package com.springbook.biz.user;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

import com.springbook.biz.board.BoardVO;
import com.springbook.biz.user.impl.UserDAO;

public class UserServiceClient {

	public static void main(String[] args) {
		// 1. Spring 컨테이너를 구동한다.
		AbstractApplicationContext container = new GenericXmlApplicationContext("user/userContext.xml");
//		UserDAO userDAO = new UserDAO();
//		UserServiceImpl userService = new UserServiceImpl();
//		userService.setUserDAO(userDAO);
		
//		id="userDAO" - UserDAO userDAO = new UserDAO();
		
//		id="userService" - UserServiceImpl userService = new UserServiceImpl();
//		public class UserServiceImpl implements UserService {
//			private UserDAO userDAO = new UserDAO();
//
//			public UserVO getUser(UserVO vo) {
//				return userDAO.getUser(vo);
//			}
//
//			public void setUserDAO(UserDAO userDAO) {
//				this.userDAO = userDAO;
//			}
//		}
		
		// 2. Spring 컨테이너로부터 UserServiceImpl 객체를 Lookup 한다.
		UserService userService = (UserService) container.getBean("userService"); 
		
		// 3. 로그인 기능 테스트
		UserVO vo = new UserVO();
		vo.setId("test");
		vo.setPassword("test1234");
		
		UserVO user = userService.getUser(vo);
		if(user !=null) {
			System.out.println(user.getName() + "님 환영합니다.");
		} else {
			System.out.println("로그인 실패");
		}
		
		// 4. Spring 컨테이너를 종료한다.
		container.close();
		
		
		
		// 1. insert into users values (?,?,?,?);
		
//		boardService.insertBoard(vo);
		
		// 2. update
		
		// 3. delete
		
		// 4. 전체목록 보여주기
		
		// 5. 선택한 아이디 정보만 보여주기
	}

}
