[20220203 수업내용]

# 웹

world wide web의 약자
도널드 카누스가 제안
팀 버너스 리
 -html, 웹서버, 브라우저, 최초의 웹서비스 제공

웹서비스와 관련된 html, 브라우저 모두 만듦.
 HTML (Hyper Text Markup Language)
 - 통신 프로토콜(컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식과 규칙의 체계)

세계 최초의 상용화된 :모자익
최초의 상업용 브라우저 : 네스케이프


국내 통신이 발달한 시기는 김대중 정부에서의 국가주도사업이었다.
손 마사요시(손정의)로 인해 통신이 선정되었다.

1997년 1월 HTML 3.0
1997년 12월 HTML 4.0
 -3가지 스키마의 종류
  - Strict(엄격) : 사용이 중지된 요소를 중지한다.
  - Transitional(변이) : 사용이 중지된 요소를 허용한다.
  - Frameset(프레임셋) : 대부분 프레임 관련 요소에서만 허용한다.

www.w3school.com 에서 공부가능

데이터베이스 없이 html로 데이터베이스를 표현하면 됨. --> xml의 등장
# xml : 또다른 마크업 언어. 마크업 언어를 통해 데이터베이스를 만들어냄.
 * 마크업 언어(markup)는 태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지
 <student>
	<stu>
		<kor>10</kor>

	</stu>
 </students>
# xhtml : html이면서 정보를 표현해내는 것.
사전에 있는 모든 단어를 가지고 태그가 될 수 있도록 프로그래밍화.

언어를 통해 만들어진 프로그램이 로컬 프로그램을 통해 실행되길 원함. <-- activeX의 등장.
# activeX :  브라우저 확장 프로그램은 일반 응용프로그램을 컴퓨터에 설치한 후 웹 페이지에서 접근할 수 있게 한 것이다. 

# HTML5
 - 웹 페이지를 위한 지배적인 마크업 언어. 정적인 처리 / 동적인 처리의 표현 - javascript가 표현
 - 비디오, 오디오 등 다양한 부가기능과 최신 멀티미디어 콘텐츠를 액티브X 없이 브라우저에서 쉽게 볼 수 있게 하는 것을 목적으로 한다.
 - W3C는 2014년 10월 28일 HTML5 표준안을 확정했다고 발표했다.
 - 화면에 대한 구현은 하지 X. 정보와 스트럭쳐(정보의 구조화)만.
   화면의 처리는 CSS가 담당.
 - 최초의 HTML5에 대한 언급은 2008년도 스티브잡스가 
 - 최초의 HTML5 사이트의 적용은 2013년
 - 그 사이트는 '맥스톤'
 - '웹표준'은 HTML5 이후의 것을 의미.
 - '웹표준'의 입장에서 html,css,javascript는 모두 필수적인 존재.
 - 화면의 표현 수단으로 사용되는 태그들은 사라짐(CSS가 담당) / 디자인 목적의 테이블은 사용하지 X, 테이블의 사용이 한정적이게 됨.
 - 마찬가지로 화면 디자인 목적의 img태그는 사용하지 X
 - html5는 브라우저에 따라, 버전에 따라 사용하는 브라우저가 다름

--------------------------------------------------------------------------------

# 두껍게

 <b> (bord)태그는 사라짐
 대신, <strong>이 살아남
 <strong> : 강조의 의미
 >>의미를 지닌 것은 살아남고, 의미 없이 디자인만 담당하던 것은 사라졌다.

-------------------------------------------------------------------------------

# Video

 가능한 미디어확장자(3가지) - MP4, WebM, Ogg

# Audio

 가능한 오디오확장자(3가지) - MP3, WAV, OGG

 hrml에서 추가된 태그
 # Button태그
 - form 태그 안에서는 '전송'(submit)
 - form 태그 밖에서는 '타입'이 button

 # 시맨틱(Semantic) 태그

시맨틱(Semantic)은 "의미의, 의미론적인"이라는 뜻이다.
즉, HTML5에 도입된 시맨틱 태그는 개발자와 브라우저에게 의미있는 태그를 제공하게 된다.
 1. 시맨틱 태그 정보를 수집하는 봇이 정보를 인식할 수 있도록
 2. 

<header> : 도입부, 머리글
<nav> : 메뉴
<footer> 
<aside> : 해당 페이지와 전혀 연관이 없는 내용 / aside에 해당하는 article만 'class'
<section> : 반드시 명세되어야 할 내용
<article> : 해당 페이지와 연관은 있지만 주력은 아닌 내용

-----------------------------------------------------------------------------------

# CSS
 - HTML5이전부터 등장했던 웹디자인을 위한 언어.
 -'디자인'측면에서 hrml과 좋은사이..
 - inline방식. 가장 사용을 지양해야 할 방식
 - 문서 header에 style태그를 사용해서 명세하는 방식 --> 주력으로 사용할 방식
 - 외부파일로 불러오는 방식 
	특징 : 확장자가 css, link라는 태그를 사용, 안에 들어가는 내용은 style태그 안에 들어가는 내용 
	장점 : 잘 만들어진 css파일을 불러다 쓰면 똑같은 파일을 불러옴. 
 - css 기본문법 : 선택자{속성:값;속성:값;}
   			--> '선택자'가 가장 중요한 요소.
			--> 각 element에 부여할 수 있는 속성들. 뭐가 있는지 '있다'정도만 알면 assist로 해결가능
			--> 값에 대한 단위가 반드시 명세되어야 함. css는 연산이 불가하기 때문
 - 선택자(3가지)
    - 태그(tag) 선택자 : 태그를 명세하면 해당 태그가 속성을 부여받는다. 태그 그대로 쓰면 된다.
    - 아이디(id) 선택자 : 아이디 선택자는 CSS를 적용할 대상으로 특정 요소를 선택할 때 사용합니다.
      		  	  한 문서에서 id의 중복은 불가. 오직 하나의 id만 받을 수 있다.
    - 클래스(class) 선택자 : 클래스 선택자는 특정 집단의 여러 요소를 한 번에 선택할 때 사용한다.
		      	     서로 다른 element 일지라도 부여 가능하다. 다중 선택 가능
   * 일반적으로 태그 선택자만 사용하는 것이 좋음.
   * 우선순위
	inline > id > class > tag
     동일한 우선순위인 경우에는 제일 마지막에 적용한 것이 적용됨.
	
 - 주석 : ' / '
 - 다중의 선택 : ' , '






