1. 그룹함수
2. 트랜젝션
3. jsp - 문법
4. 내장객체

-------------------

게시판 만들기(CRUD)


-- 그룹함수
: 각 레코드에서 결과값을 얻어내는 것. 하나의 레코드로 반환됨
   *그룹함수를 사용할 때 유의할 점*
	- 그룹 함수의 결과는 1개이기 때문에 그룹 함수를 적용하지 않은 단순 컬럼과는 같이 올 수 없다.
그룹함수의 종류
 - sum
 - count: 레코드의 개수를 구한다. 어떤 컬럼이든 구애받지 않는다.
	ex) 커미션을 받은 사원의 수 select count(comm) from emp;
  	  null 은 count에서 제외하고 계산한다.    
 - group by : 그룹을 지었을 때 그룹함수는 그룹별로 결과를 내고, 내용도출된다.
 - having : 그룹에 조건을 걸 수 있다. group by로 묶은 것에 조건을 다는 것. 그룹 함수에 대한 조건이므로 GROUP BY와 함께 사용한다.

cf) 처리 순서 ...> having > order by

-- 트랜젝션
 * 적용가능 대상 : insert, update, delete
  - commit(커밋) : 실질적인 데이터베이스의 작성을 한다. 모든 부분작업이 정상적으로 완료하면 이 변경사항을 한꺼번에 DB에 반영한다.
		 커밋 이전시점으로 돌아갈 수는 없다. 롤백을 하더라도 롤백은 마지막 시점으로 돌아가기 때문.
  - rollback(롤백) : 마지막 커밋시점으로 돌아간다. 부분 작업이 실패하면 트랜잭션 실행 전으로 되돌립니다.
		   마지막으로 실행한 커밋(또는 롤백) 명령 이후부터 새로운 커밋(또는 롤백) 명령을 실행하는 시점까지 수행된 모든 DML명령		   
  - savepoint : 현재의 트랜젝션을 작게 분리할 수 있다. 전체가 아닌 특정 부분에서 트랜잭션을 취소시킬 수 있다.
		모든 연산을 취소하지 않고 정해진 부분까지만 되돌리고 싶을 때 사용하는 것
		지정방법 [savepoint 세이브포인트이름;]



3. jsp 문법

서블릿과 jsp
 - 서블릿 : 실행 코드 방식의 특징 / 자바가 웹을 구동하는 원리
 - jsp : 스크립트 코드 방식

jsp의 특징 
- 자바 기반 스크립트 언어. 자바의 기능을 그대로 사용 가능
- http에 대한 클라이언트의 요청 처리/응답
- 웹 어플리케이션에서 결과 화면을 생성할 때 주로 사용

웹 컨테이너
- 웹 어플리케이션을 실행할 수 있는 컨테이너
- jsp와 서블릿을 실행해줌



jsp페이지의 구성 요소
- 디렉티브 <%@  %>
  : jsp 페이지에 대한 설정 정보를 지정
  
- 스크립트: 
표현식 (값을 출력) <%= 값 %>
스크립트 릿(자바코드가 들어가는 부분) <% %>
선언부(자바 메서드를 정의) <%! %>
	: 클래스 안 이면서 메인메서드 밖에 위치
기본객체
: 웹 프로그래밍에 필요한 정보를 제공

-request : 요청정보를 구할 때 사용
-response : 응답과 관련된 설정(헤더, 쿠키 등) 시 사용
-out : 직접 응답을 출력할 때 사용
-session : 세션 관리에 사용


page 디렉티브   <%@ page 속성1="속성값1" 속성2="속성값2"..... %>     


meta,contenttype 브라우저가 해석
meta - 브라우저에게 정보를 전달


request 내장 객체
: 웹 브라우저가 웹 서버에 전송한 요청 관련 정보 제공

메서드 방식
Post 방식 / Get 방식
Post 방식 : 웹에 노출되지 않고 보안적으로 더 뛰어나다.
	    
파라미터 값의 인코딩/디코딩
 
response 내장 객체 : 응답 정보를 저장한다.
 - 서버->클라이언트
 - 헤더 설정 메서드

out 내장객체 : jsp페이지가 생성하는 모든 내용은 out 기본 객체를 통해서 전송
session : 접속의 유지 및 관리하는 객체













